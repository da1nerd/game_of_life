// Mocks generated by Mockito 5.4.0 from annotations
// in game_of_life/test/domain/game_engine_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:game_of_life/domain/cell.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [Cell].
///
/// See the documentation for Mockito's code generation for more information.
class MockCell extends _i1.Mock implements _i2.Cell {
  MockCell() {
    _i1.throwOnMissingStub(this);
  }

  @override
  int get neighbors => (super.noSuchMethod(
        Invocation.getter(#neighbors),
        returnValue: 0,
      ) as int);
  @override
  bool get alive => (super.noSuchMethod(
        Invocation.getter(#alive),
        returnValue: false,
      ) as bool);
  @override
  List<Object?> get props => (super.noSuchMethod(
        Invocation.getter(#props),
        returnValue: <Object?>[],
      ) as List<Object?>);
  @override
  bool shouldLive() => (super.noSuchMethod(
        Invocation.method(
          #isAlive,
          [],
        ),
        returnValue: false,
      ) as bool);
}
